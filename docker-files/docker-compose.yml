# docker network create --driver=bridge --subnet=192.168.11.0/24 --ip-range=192.168.11.0/24 --gateway=192.168.11.1 peruvianbank-network

version: "3.9"

services:

  mongo-service:
    image: mongo
    #restart: always
    container_name:  peruvianbank-mongo-service
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: peruvianbank
      MONGO_INITDB_ROOT_PASSWORD: peruvianbank
    networks:
      - peruvianbank

  mongo-express:
    image: mongo-express
    #restart: always
    container_name: peruvianbank-mongo-express-service
    depends_on:
      - "mongo-service"
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: peruvianbank
      ME_CONFIG_MONGODB_ADMINPASSWORD: peruvianbank
      ME_CONFIG_MONGODB_URL: mongodb://peruvianbank:peruvianbank@mongo-service:27017
    networks:
      - peruvianbank
      
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: mitocode_kafka_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - peruvianbank

  broker:
    image: confluentinc/cp-kafka
    container_name: peruvianbank-kafka-broker
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_REPLICATION_FACTOR: 1
    networks:
      - peruvianbank

networks:
  peruvianbank:
    name: peruvianbank-network